/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package gui;
import java.io.File;
import java.io.FileOutputStream;
import java.io.OutputStreamWriter;
import java.io.BufferedReader;
import java.io.IOException;
import java.nio.file.Files;
import java.nio.file.Paths;
import javax.swing.JTextArea;
import javax.swing.JFileChooser;
import cipher.GFG;
import cipher.CaesarCipher;
import cipher.Affine;
import cipher.Hill_C;
import cipher.RC4;
/**
 *
 * @author anhtuan
 */
public class cipher_gui extends javax.swing.JFrame {

    /**
     * Creates new form cipher_gui
     */
    public cipher_gui() {
        initComponents();
        this.jtxtnum.setEnabled(false);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jcmbbc = new javax.swing.JComboBox<>();
        jbtnOpen = new javax.swing.JButton();
        jbtnSave = new javax.swing.JButton();
        jPanel2 = new javax.swing.JPanel();
        jPanel3 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        jtxta = new javax.swing.JTextArea();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jtxtb = new javax.swing.JTextArea();
        jbtnEncrypt = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jtxtkey = new javax.swing.JTextField();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jtxtnum = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jcmbbc.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Vegenere Cipher", "Caesar Cipher", "Affine", "Hill Cipher", "RC4" }));
        jcmbbc.addItemListener(new java.awt.event.ItemListener() {
            public void itemStateChanged(java.awt.event.ItemEvent evt) {
                jcmbbcItemStateChanged(evt);
            }
        });

        jbtnOpen.setText("Open");
        jbtnOpen.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnOpenMouseClicked(evt);
            }
        });

        jbtnSave.setText("Save");
        jbtnSave.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnSaveMouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addComponent(jcmbbc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jbtnOpen)
                .addGap(18, 18, 18)
                .addComponent(jbtnSave)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jcmbbc, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jbtnOpen)
                    .addComponent(jbtnSave))
                .addGap(14, 14, 14))
        );

        jtxta.setColumns(20);
        jtxta.setRows(5);
        jtxta.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtaFocusLost(evt);
            }
        });
        jScrollPane1.setViewportView(jtxta);

        jLabel3.setText("Plain Text");

        jLabel4.setText("Cipher Text");

        jtxtb.setColumns(20);
        jtxtb.setRows(5);
        jScrollPane2.setViewportView(jtxtb);

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 262, Short.MAX_VALUE)
            .addComponent(jScrollPane2)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(0, 0, Short.MAX_VALUE))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addComponent(jLabel3)
                .addGap(2, 2, 2)
                .addComponent(jScrollPane1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel4)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 105, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        jbtnEncrypt.setText("Encryption");
        jbtnEncrypt.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jbtnEncryptMouseClicked(evt);
            }
        });

        jButton2.setText("Decryption");
        jButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jButton2MouseClicked(evt);
            }
        });

        jButton3.setText("Close");

        jtxtkey.addFocusListener(new java.awt.event.FocusAdapter() {
            public void focusLost(java.awt.event.FocusEvent evt) {
                jtxtkeyFocusLost(evt);
            }
        });

        jLabel1.setText("KeyWords");

        jLabel2.setText("Number Shift");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                            .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                            .addComponent(jLabel1)
                            .addGap(22, 22, 22))
                        .addGroup(jPanel2Layout.createSequentialGroup()
                            .addGap(30, 30, 30)
                            .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jbtnEncrypt, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                            .addGap(13, 13, 13)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jtxtkey, javax.swing.GroupLayout.PREFERRED_SIZE, 82, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                                .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jtxtnum)))
                        .addContainerGap())))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel2Layout.createSequentialGroup()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(jPanel2Layout.createSequentialGroup()
                        .addGap(6, 6, 6)
                        .addComponent(jLabel1)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtkey, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jtxtnum, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 12, Short.MAX_VALUE)
                        .addComponent(jbtnEncrypt)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButton2)
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)))
                .addContainerGap())
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jbtnOpenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnOpenMouseClicked
        // TODO add your handling code here:
        StringBuilder csb = new StringBuilder();
        createUI(csb);
        jtxta.setText(csb.toString());
    }//GEN-LAST:event_jbtnOpenMouseClicked

    private void jbtnSaveMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnSaveMouseClicked
        // TODO add your handling code here:
        createUIS(this.jtxta);
    }//GEN-LAST:event_jbtnSaveMouseClicked

    private void jbtnEncryptMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jbtnEncryptMouseClicked
        // TODO add your handling code here:
        encryption();
    }//GEN-LAST:event_jbtnEncryptMouseClicked

    private void jButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jButton2MouseClicked
        // TODO add your handling code here:
        decryption();
    }//GEN-LAST:event_jButton2MouseClicked

    private void jtxtaFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtaFocusLost
        // TODO add your handling code here:
        fixString(1);
    }//GEN-LAST:event_jtxtaFocusLost

    private void jtxtkeyFocusLost(java.awt.event.FocusEvent evt) {//GEN-FIRST:event_jtxtkeyFocusLost
        // TODO add your handling code here:
        fixString(2);
    }//GEN-LAST:event_jtxtkeyFocusLost

    private void jcmbbcItemStateChanged(java.awt.event.ItemEvent evt) {//GEN-FIRST:event_jcmbbcItemStateChanged
        // TODO add your handling code here:
        int index = this.jcmbbc.getSelectedIndex();
        if(index == 0){
            this.jtxtkey.setEnabled(true);
            this.jtxtnum.setEnabled(false);
        }
        else if(index == 1){
            this.jtxtkey.setEnabled(false);
            this.jtxtnum.setEnabled(true);
        }
    }//GEN-LAST:event_jcmbbcItemStateChanged

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(cipher_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(cipher_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(cipher_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(cipher_gui.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new cipher_gui().setVisible(true);
            }
        });
    }
   private static void createUI(StringBuilder textT){
            JFileChooser fileChooser = new JFileChooser();
            int a = fileChooser.showOpenDialog(fileChooser);
            File file = fileChooser.getSelectedFile();
            long len = file.length();
            StringBuilder sb = new StringBuilder();
            try (BufferedReader br = Files.newBufferedReader(Paths.get(file.getPath()))) {

            // read line by line
            String line;
            while ((line = br.readLine()) != null) {
                sb.append(line).append("\n");
            }

        } catch (IOException e) {
            System.err.format("IOException: %s%n", e);
        }
        textT.append(sb);
   }
   private static void createUIS(JTextArea textArea){
        JFileChooser fileChooser = new JFileChooser();
fileChooser.setDialogTitle("Specify a file to save");   
 
int userSelection = fileChooser.showSaveDialog(fileChooser);
if (userSelection == JFileChooser.APPROVE_OPTION) {
    File file = fileChooser.getSelectedFile();
    try {
        textArea.write(new OutputStreamWriter(new FileOutputStream(file),
            "utf-8"));
      } catch (Exception e) {
        e.printStackTrace();
      }
}
   }
   private void encryption(){
       String keys = this.jtxtkey.getText();
       String contents = this.jtxta.getText();
       String cipherContents;
       String rekeys;
       int index = this.jcmbbc.getSelectedIndex();
       if(index == 0){
       gfg = new GFG();
       rekeys = gfg.generateKey(contents, keys);
       cipherContents = gfg.cipherText(contents, rekeys);
       this.jtxtb.removeAll();
       this.jtxtb.setText(cipherContents);
       }
       else if(index == 1){
       cs = new CaesarCipher();
       String str = this.jtxtnum.getText();
       int len = str.length();
       int i = 0;
       int val = 0;
       while(i < len){
           val += (int)(str.charAt(i)-48)*(len - i);
           i++;
       }
       StringBuffer en;
       en = cs.encrypt(contents, val);
       this.jtxtb.setText(en.toString());
       }
       else if(index == 2){
       af = new Affine();
       char str[] = new char[contents.length()];
       for(int i = 0; i < contents.length(); i++)
           str[i] = contents.charAt(i);
       cipherContents = af.encryptMessage(str);
       this.jtxtb.setText(cipherContents);
       }
       else if( index == 3){
           hc = new Hill_C();
           this.jtxtb.setText(hc.HillCipher(contents, keys));
       }
       else if( index == 4){
           rc4 = new RC4();
           rc4.setPlain(this.jtxta.getText());
           rc4.setKey(this.jtxtkey.getText());
           this.jtxtb.setText(rc4.Encryption());
       }
       
   }
   private void decryption(){
       String keys = this.jtxtkey.getText();
       String cipherContents = this.jtxtb.getText();
       String contents;
       String rekeys;
       int index = this.jcmbbc.getSelectedIndex();
       if( index == 0 ){
       gfg = new GFG();
       rekeys = gfg.generateKey(cipherContents, keys);
       contents = gfg.originalText(cipherContents, rekeys);
       this.jtxta.removeAll();
       this.jtxta.setText(contents);
       }
       else if(index == 1 ){
       cs = new CaesarCipher();
       String str = this.jtxtnum.getText();
       int len = str.length();
       int i = 0;
       int val = 0;
       while(i < len){
           val += (int)(str.charAt(i)-48)*(len - i);
           i++;
       }
       StringBuffer de;
       de = cs.decrypt(cipherContents, val);
       this.jtxta.setText(de.toString());
       }
       else if( index == 2){
           af = new Affine();
           contents = af.decryptCipher(cipherContents);
           this.jtxta.setText(contents);
       }
       else if( index == 4){
           rc4 = new RC4();
           rc4.setPlain(this.jtxtb.getText());
           rc4.setKey(this.jtxtkey.getText());
           this.jtxta.setText(rc4.Encryption());
       }
   }
   private void fixString(int c){
       String temp;
       if(c == 1){
           temp = this.jtxta.getText().toUpperCase();
           this.jtxta.removeAll();
           this.jtxta.setText(temp);
       }
       if(c == 2){
           temp = this.jtxtkey.getText().toUpperCase();
           this.jtxtkey.removeAll();
           this.jtxtkey.setText(temp);
       }
   }
   private GFG gfg;
   private CaesarCipher cs;
   private Affine af;
   private Hill_C hc;
   private RC4 rc4;
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JButton jbtnEncrypt;
    private javax.swing.JButton jbtnOpen;
    private javax.swing.JButton jbtnSave;
    private javax.swing.JComboBox<String> jcmbbc;
    private javax.swing.JTextArea jtxta;
    private javax.swing.JTextArea jtxtb;
    private javax.swing.JTextField jtxtkey;
    private javax.swing.JTextField jtxtnum;
    // End of variables declaration//GEN-END:variables
}
